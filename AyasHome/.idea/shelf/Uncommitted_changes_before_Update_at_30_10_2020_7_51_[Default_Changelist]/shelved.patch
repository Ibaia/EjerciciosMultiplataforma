Index: app/src/main/java/com/dosdmtres/ayashome/Datos.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.dosdmtres.ayashome;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.TimePicker;\r\nimport android.widget.Toast;\r\nimport android.widget.Toolbar;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.dosdmtres.ayashome.model.Items;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.Calendar;\r\n\r\nimport static com.dosdmtres.ayashome.Portada.items;\r\n\r\n\r\npublic class Datos extends AppCompatActivity {\r\n\r\n    private static final String TAG = null;\r\n    private ImageView imageView;\r\n    private TextView servicio;\r\n    private TextView descripcion;\r\n    private TextView precio;\r\n    private Button reserva;\r\n    private Toolbar toolbarMain;\r\n\r\n    String descripcionItem;\r\n    String precioItem;\r\n    String imageLargeItem;\r\n    String nombreItem;\r\n    private EditText fecha;\r\n    private EditText hora;\r\n    private EditText fechaSalida;\r\n    public static Calendar calFecha;\r\n    public static Calendar calFechaSalida;\r\n    private int numHora, minuto,  dia, mes, ano;\r\n    private boolean formFecha = false;\r\n    private boolean formFechaSalida = false;\r\n    private boolean formHora = false;\r\n    private boolean tipoAlojamiento = false;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_datos);\r\n\r\n        ImageView imgItem = findViewById(R.id.imgGrande);\r\n        TextView tvServicio = findViewById(R.id.servicio);\r\n        TextView tvDescripcion = findViewById(R.id.descripcion);\r\n        TextView tvPrecio = findViewById(R.id.tvPrecio);\r\n        reserva = findViewById(R.id.reserva);\r\n        fecha = findViewById(R.id.etFecha);\r\n        hora = findViewById(R.id.etHora);\r\n        fechaSalida = findViewById(R.id.etFechaSalida);\r\n\r\n        // Dinamic load of item's data\r\n        nombreItem = getIntent().getStringExtra(\"NOMBRE\");\r\n        descripcionItem = getIntent().getStringExtra(\"DESCRIPCION\");\r\n        precioItem = getIntent().getStringExtra(\"PRECIO\");\r\n        imageLargeItem = getIntent().getStringExtra(\"IMAGEN\");\r\n\r\n        tvDescripcion.setText(descripcionItem);\r\n        tvPrecio.setText(precioItem);\r\n        tvServicio.setText(nombreItem);\r\n\r\n        try {\r\n            Picasso.get().load(imageLargeItem)\r\n                    .fit()\r\n                    .centerCrop()\r\n                    .into(imgItem);\r\n        } catch (Exception e) {\r\n            imgItem.setImageResource(R.drawable.logo_icono);\r\n        }\r\n\r\n        // Calendar\r\n        comprobarTipoReserva();\r\n        comprobar();\r\n\r\n    }\r\n    public void listenerBotones(View v) {\r\n\r\n        switch (v.getId()) {\r\n            case R.id.etFecha:\r\n                mostrarFecha();\r\n                break;\r\n            case R.id.etHora:\r\n                mostrarHora();\r\n                break;\r\n            case R.id.etFechaSalida:\r\n                mostrarFechaSalida();\r\n                break;\r\n        }\r\n    }\r\n\r\n    //Methods\r\n    public void mostrarFecha() {\r\n        final Calendar calendario = Calendar.getInstance();\r\n        dia = calendario.get(Calendar.DAY_OF_MONTH);\r\n        mes = calendario.get(Calendar.MONTH);\r\n        ano = calendario.get(Calendar.YEAR);\r\n\r\n\r\n        DatePickerDialog dp = new DatePickerDialog(this, new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                //month+1 because it starts being 0\r\n                String a = dayOfMonth + \"/\" + (month + 1) + \"/\" + year;\r\n                if((month + 1) < 10) {\r\n                    a = dayOfMonth + \"/\" + \"0\" + (month + 1) + \"/\" + year;\r\n                }\r\n                fecha.setText(a, TextView.BufferType.EDITABLE);\r\n\r\n                calendario.set(year, month, dayOfMonth);\r\n\r\n                int fechaSeleccionada = calendario.get(Calendar.DAY_OF_WEEK);\r\n                boolean esLunes = (fechaSeleccionada == Calendar.MONDAY);\r\n                if (esLunes) {\r\n                    CharSequence text = \"Por favor, seleccione un día que no sea lunes.\";\r\n                    Toast toast = Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT);\r\n\r\n                    toast.show();\r\n                    formFecha = false;\r\n                }\r\n                else {\r\n                    formFecha = true;\r\n                }\r\n                calFecha = calendario;\r\n\r\n                comprobarEntreFechas();\r\n                comprobar();\r\n            }\r\n        }, ano, mes, dia);\r\n\r\n        //Setting min date to the current date\r\n        dp.getDatePicker().setMinDate(System.currentTimeMillis() - 1000);\r\n\r\n        // Setting Max Date to next 2 years\r\n        // dp.getDatePicker().setMaxDate(Calendar.YEAR + 1);\r\n\r\n\r\n        dp.setTitle(\"Seleccionar fecha\");\r\n        dp.show();\r\n\r\n    }\r\n\r\n    public void mostrarFechaSalida() {\r\n        final Calendar calendario = Calendar.getInstance();\r\n        dia = calendario.get(Calendar.DAY_OF_MONTH);\r\n        mes = calendario.get(Calendar.MONTH);\r\n        ano = calendario.get(Calendar.YEAR);\r\n\r\n\r\n        DatePickerDialog dp = new DatePickerDialog(this, new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\r\n                //month+1 because it starts being 0\r\n                String a = dayOfMonth + \"/\" + (month + 1) + \"/\" + year;\r\n                if((month + 1) < 10) {\r\n                    a = dayOfMonth + \"/\" + \"0\" + (month + 1) + \"/\" + year;\r\n                }\r\n                fechaSalida.setText(a, TextView.BufferType.EDITABLE);\r\n\r\n                calendario.set(year, month, dayOfMonth);\r\n\r\n                int fechaSeleccionada = calendario.get(Calendar.DAY_OF_WEEK);\r\n                boolean esLunes = (fechaSeleccionada == Calendar.MONDAY);\r\n                if (esLunes) {\r\n                    CharSequence text = \"Por favor, seleccione un día que no sea lunes.\";\r\n                    Toast toast = Toast.makeText(getApplicationContext(), text, Toast.LENGTH_SHORT);\r\n\r\n                    toast.show();\r\n                    formFechaSalida = false;\r\n                }\r\n                else {\r\n                    formFechaSalida = true;\r\n                }\r\n                calFechaSalida = calendario;\r\n\r\n                comprobarEntreFechas();\r\n                comprobar();\r\n            }\r\n        }, ano, mes, dia);\r\n\r\n        //Setting min date to the current date\r\n        dp.getDatePicker().setMinDate(System.currentTimeMillis() - 1000);\r\n\r\n        dp.setTitle(\"Seleccionar fecha salida\");\r\n        dp.show();\r\n\r\n    }\r\n\r\n    //Checks if the selected time is valid\r\n    public void mostrarHora() {\r\n        final Calendar calendarioHora = Calendar.getInstance();\r\n        numHora = calendarioHora.get(Calendar.HOUR_OF_DAY);\r\n        minuto = calendarioHora.get(Calendar.MINUTE);\r\n\r\n        TimePickerDialog tp = new TimePickerDialog(this, new TimePickerDialog.OnTimeSetListener() {\r\n            @Override\r\n            public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                String a = hourOfDay + \":\" + minute;\r\n                if(minute < 10) {\r\n                    a = hourOfDay + \":\" + \"0\" + minute;\r\n                }\r\n                hora.setText(a, TextView.BufferType.EDITABLE);\r\n\r\n                formHora = true;\r\n                comprobar();\r\n\r\n            }\r\n        }, numHora, minuto, false);\r\n        tp.show();\r\n\r\n    }\r\n\r\n    //Checks if the service is for housing or not\r\n    public void comprobarTipoReserva() {\r\n        tipoAlojamiento = true;\r\n        fechaSalida.setVisibility(View.VISIBLE);\r\n        hora.setVisibility(View.GONE);\r\n    }\r\n\r\n    //Checks if the two dates from housing are valid\r\n    //if the final date id smaller than the first, or the same,\r\n    public void comprobarEntreFechas() {\r\n        if (tipoAlojamiento = true) {\r\n            if (calFecha != null && calFechaSalida != null) {\r\n                if ((calFechaSalida.get(Calendar.YEAR) - calFecha.get(Calendar.YEAR) >= 0)) {\r\n                    if ((calFechaSalida.get(Calendar.MONTH) - calFecha.get(Calendar.MONTH) >= 0)) {\r\n                        if ((calFechaSalida.get(Calendar.DAY_OF_MONTH) - calFecha.get(Calendar.DAY_OF_MONTH) > 0)) {\r\n                            formFechaSalida = true;\r\n                            fechaSalida.setTextColor(0xff000000);\r\n                            fecha.setTextColor(0xff000000);\r\n                        } else {\r\n                            formFechaSalida = false;\r\n                            fechaSalida.setTextColor(0xFFFF0000);\r\n                            fecha.setTextColor(0xFFFF0000);\r\n                        }\r\n                    } else {\r\n                        formFechaSalida = false;\r\n                        fechaSalida.setTextColor(0xFFFF0000);\r\n                        fecha.setTextColor(0xFFFF0000);\r\n                    }\r\n                } else {\r\n                    formFechaSalida = false;\r\n                    fechaSalida.setTextColor(0xFFFF0000);\r\n                    fecha.setTextColor(0xFFFF0000);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //check if the form is correct and completed\r\n    public void comprobar() {\r\n        boolean formularioCompleto = false;\r\n\r\n        if (!tipoAlojamiento) {\r\n            if (formFecha && formHora) {\r\n                formularioCompleto = true;\r\n            } else {\r\n                formularioCompleto = false;\r\n            }\r\n        } else {\r\n            if (formFecha && formFechaSalida) {\r\n                formularioCompleto = true;\r\n            } else {\r\n                formularioCompleto = false;\r\n            }\r\n        }\r\n        if (!formularioCompleto) {\r\n            reserva.setEnabled(false);\r\n        } else {\r\n            reserva.setEnabled(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/dosdmtres/ayashome/Datos.java	(revision 65821f2b384a89616d99e2c7c1fcae311c85660b)
+++ app/src/main/java/com/dosdmtres/ayashome/Datos.java	(date 1604040407170)
@@ -233,7 +233,7 @@
     //Checks if the two dates from housing are valid
     //if the final date id smaller than the first, or the same,
     public void comprobarEntreFechas() {
-        if (tipoAlojamiento = true) {
+        if (tipoAlojamiento == true) {
             if (calFecha != null && calFechaSalida != null) {
                 if ((calFechaSalida.get(Calendar.YEAR) - calFecha.get(Calendar.YEAR) >= 0)) {
                     if ((calFechaSalida.get(Calendar.MONTH) - calFecha.get(Calendar.MONTH) >= 0)) {
@@ -285,8 +285,4 @@
         }
     }
 
-
-
-
-
 }
\ No newline at end of file
